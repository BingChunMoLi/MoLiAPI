<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bingchunmoli.api.netease.mapper.NeteaseMusicSongMapper">

    <resultMap id="BaseResultMap" type="com.bingchunmoli.api.netease.bean.NeteaseMusicSong">
            <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="thirdId" column="third_id" jdbcType="BIGINT"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="albumId" column="album_id" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,third_id,`name`,album_id
    </sql>
    <insert id="saveSongUser">
        insert into netease_music_song_user(user_id, song_id) values
        <foreach collection="userIds" item="item" separator=",">
            (${item}, ${songId})
        </foreach>
    </insert>

    <select id="selectRandomSong" resultType="com.bingchunmoli.api.netease.bean.NeteaseMusicSong">
        SELECT id, third_id, `name`, album_id, playlist_id FROM netease_music_song
        ORDER BY RAND()
        LIMIT 1
    </select>

    <select id="getSongUser" resultType="java.lang.Integer">
        select user_id from netease_music_song_user
        where song_id = #{id}
    </select>

    <select id="getMusicSongList" resultType="com.bingchunmoli.api.netease.bean.NeteaseMusicSongVO">
        select s.id, s.third_id, s.`name`, album_id, s.playlist_id, a.pic_url, a.publish_time, a.type, mu.nickname
        from netease_music_song s join netease_music_album a on a.id = s.album_id
        join netease_music_song_user su on su.song_id = s.id
        join api.netease_music_user mu on su.user_id = mu.id
        where s.playlist_id = #{id}
    </select>
</mapper>
