version: "3.8"
services:
  mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: api
    restart: unless-stopped
    volumes:
      - ./docker-compose/mysql/data/:/var/lib/mysql
      - ./docker-compose/mysql/log/:/var/log/mysql
      - ./docker-compose/mysql/conf:/etc/mysql/conf.d
      - ./src/main/resource/db/migration/:/docker-entrypoint-initdb.d/
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3306:3306"
    command: [
      'mysqld',
      '--innodb-buffer-pool-size=80M',
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--default-time-zone=+8:00',
      '--lower-case-table-names=1'
    ]
    networks:
      - moliapi
  redis:
    image: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - ./docker-compose/redis/conf/:/etc/redis/
      - ./docker-compose/redis/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - moliapi
  moliapi:
    container_name: moliapi
    image: bingchunmoli/moliapi
    restart: unless-stopped
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      MYSQL_DB: api
      JVM_OPTS: "-Dspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
        -Dspring.datasource.url=jdbc:mysql://mysql:3306/api?serverTimezone=UTC&allowMultiQueries=true&rewriteBatchedStatements=true&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&failOverReadOnly=false
        -Dspring.datasource.username=root
        -Dspring.datasource.password=password
        -Dspring.profiles.active=template
      "
    ports:
      - "8090:8090"
    volumes:
      - ./docker-compose/config:/soft/config/
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - moliapi
    depends_on:
      - mysql
      - redis
      - loki
  loki:
    container_name: loki
    image: grafana/loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./docker-compose/local-config.yml:/etc/loki/local-config.yml
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - moliapi
  grafana:
    container_name: grafana
    restart: unless-stopped
    image: grafana/grafana
    ports:
      - "3000:3000"
    user: '1000:1000'
    volumes:
      - ./docker-compose/grafana-data:/var/lib/grafana
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - moliapi
  promtail:
    container_name: promtail
    image: grafana/promtail:2.9.0
    restart: unless-stopped
    volumes:
      - ./docker-compose/promtail/log:/var/log
      - ./docker-compose/promtail/promtail-config.yml:/etc/promtail/config.yml
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - moliapi
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    user: "0"
    volumes:
      - ./docker-compose/prometheus-data:/prometheus
      - ./docker-compose/prometheus.yml:/etc/prometheus/prometheus.yml
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - moliapi
  nginx-prometheus-exporter:
    container_name: nginx-prometheus-exporter
    image: nginx/nginx-prometheus-exporter
    restart: unless-stopped
    ports:
      - '9113:9113'
    command: [ "--nginx.scrape-uri=http://nginx/nginx_status" ]
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - moliapi
    depends_on:
      - nginx
  nginx:
    container_name: nginx
    image: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker-compose/nginx/html:/usr/share/nginx/html
      - ./docker-compose/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker-compose/nginx/logs:/var/log/nginx
      - ./docker-compose/nginx/conf.d:/etc/nginx/conf.d
      - ./docker-compose/nginx/ssl:/etc/nginx/ssl
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - moliapi
    depends_on:
      - moliapi
networks:
  moliapi:
    driver: bridge
